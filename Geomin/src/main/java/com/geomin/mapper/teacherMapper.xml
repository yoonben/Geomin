<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geomin.mapper.teacherMapper">
  	
  	<select id='contentList' resultType='com.geomin.VO.memberVO'>
			    SELECT distinct
				    g.sName, p.pkgname,
				    TO_CHAR(TO_DATE('20' || g.groupResDate), 'YYYY-MM-DD HH:MM:SS') AS groupResDate,
				    DECODE(g.groupjoinStatus, 'Y', '승인', 'N', '미승인', '') AS joinStatus,
				    m.memail,
				    m.mphone,
				    m.mbirthdate,
				    g.groupid,
				    s.curpersonnel || '명' || '/' || s.personnel || '명' AS person
				FROM
				    package p
				    JOIN pkgsubsDetail s ON p.pkgid = s.pkgid
				    JOIN groupStudent g ON p.pkgid = g.pkgid
				    JOIN member m ON m.memberid = g.studentid
				WHERE
				    m.mtype = 'S'
  	</select>
  	
  	<!-- select id='contentList1' resultType='com.geomin.VO.contentVO'>
			     select distinct pkgName from pkgsubsdetail where memberID=#{memberID}
  	</select> -->
  	

<!--   	<select id='contentOne' resultType='com.geomin.VO.memberVO'>
  		     SELECT distinct
			        g.sname,
			        TO_CHAR(TO_DATE('20' || g.groupResDate), 'YYYY-MM-DD HH:MM:SS') AS groupResDate,
			        DECODE(g.groupjoinStatus, 'Y', '승인', 'N', '미승인', '') AS joinStatus,
			        m.memail,
			        m.mphone,
			        m.mbirthdate,
			        g.groupid, 
			        s.curpersonnel || '명' || '/' || s.personnel || '명' AS person
			    FROM
			        package p
			        JOIN pkgsubsDetail s ON p.pkgid = s.pkgid
			        JOIN groupStudent g ON p.pkgid = g.pkgid
			        JOIN member m ON m.memberid = g.studentid
			    WHERE
			        m.mtype = 'S'
			    and 
			        p.pkgname = #{pkgname} 
  	</select> -->
  	
  	  	<select id='contentOne' resultType='com.geomin.VO.memberVO'>
  		     SELECT 
				    g.sName, p.pkgname,
				    TO_CHAR(TO_DATE('20' || g.groupResDate), 'YYYY-MM-DD HH:MM:SS') AS groupResDate,
				    DECODE(g.groupjoinStatus, 'Y', '승인', 'N', '미승인', '') AS joinStatus,
				    m.memail,
				    m.mphone,
				    m.mbirthdate,
				    g.groupid,
				    s.curpersonnel || '명' || '/' || s.personnel || '명' AS person
				FROM
				    package p
				    JOIN pkgsubsDetail s ON p.pkgid = s.pkgid
				    JOIN groupStudent g ON p.pkgid = g.pkgid
				    JOIN member m ON m.memberid = g.studentid
				WHERE
				    m.mtype = 'S'
                    
                    group by g.sName, p.pkgname, g.groupResDate, g.groupjoinStatus, m.memail,
				    m.mphone,
				    m.mbirthdate,
				    g.groupid,s.curpersonnel, s.personnel
                    
                    having p.pkgname = #{pkgname} 
  	</select>
  	
	<update id="updateJoinStatus">
			UPDATE groupstudent
				SET groupjoinstatus = CASE 
		                                WHEN groupjoinstatus = 'Y' THEN 'N'
		                                WHEN groupjoinstatus = 'N' THEN 'Y'
		                                ELSE groupjoinstatus
		                                END
				WHERE sname = #{sname}
		        and groupid = #{groupid}
	</update>

	<select id='getSubGroup' resultType="com.geomin.VO.contentVO">
		SELECT
    		P.pkgId,
    		p.pkgName,
    		m.memberID,
    		d.subsDate,
    		p.finalPrice,
    		p.difficulty,
    		d.PERSONNEL,
    		p.pkgContent,
    		NVL2(g.groupID, g.groupID, 'NOT GROUP') AS groupID
		FROM 
    		package p
		JOIN
    		PKGSUBSDETAIL D
		ON  
    		P.pkgId = D.pkgId
		JOIN
    		member m
		ON 
    		D.memberID = m.memberID
		LEFT JOIN
    		study_group g
		ON
    		D.pkgId = g.pkgId
		WHERE 
    		p.elimination = 'N' AND m.mType = 'T' AND m.memberID = 'memberID22'
	</select>
	
	<!-- //★그룹아이디 중복처리 -->
	<select id="checkGroupid"  resultType="int">
		SELECT
			COUNT(groupid)
		FROM
			STUDY_GROUP
		where 
			groupid = #{groupid}
	</select>
	
	<insert id="regStudyGroup" parameterType="java.util.List">
		<foreach collection="list" item="list"><!--  separator=";" -->
    		INSERT INTO STUDY_GROUP(GROUPID, PKGID, MEMBERID, GROUPMEM, STUDYSTARTDATE, STUDYENDDATE)
    		VALUES (#{list.groupid}, #{list.pkgId}, 'memberID22', 0, #{list.studyStartDate}, #{list.studyEndDate})
    	</foreach>
	</insert>
	
	
</mapper>